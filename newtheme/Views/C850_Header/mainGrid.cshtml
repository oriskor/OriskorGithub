@{
    Layout = "~/Views/Shared/_MasterPage.cshtml";

}

@using EDI.Helpers.Awesome
@using Omu.AwesomeMvc
@using EDI.Utils
@using Omu.Awem.Helpers
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<meta name="viewport" content="width=device-width, initial-scale=1.0">
<title>Grid CRUD Demo - ASP.net MVC Awesome MVC5 min setup demo</title>

<link href="http://code.jquery.com/ui/1.11.4/themes/smoothness/jquery-ui.css" rel="stylesheet" type="text/css">
<link href="/Content/themes/wui/AwesomeMvc.css" rel="stylesheet" type="text/css">
<link href="/Content/themes/wui/awem.css" rel="stylesheet" type="text/css">
<link href="/Content/Common.css" rel="stylesheet" type="text/css">

<script src="https://code.jquery.com/jquery-1.12.4.min.js" integrity="sha256-ZosEbRLbNQzLpnKIkEdrPv7lOy9C27hHQ+Xp8a4MxAQ=" crossorigin="anonymous"></script>


<script src="/Scripts/AwesomeMvc.js" type="text/javascript"></script>
<script src="/Scripts/awem.js" type="text/javascript"></script>
<!-- <script src="/Scripts/utils.js" type="text/javascript"></script> -->
<!-- <script src="/Scripts/utils.js" type="text/javascript"></script> -->
<script src="~/Scripts/utils.js"></script>
<script src="http://ajax.aspnetcdn.com/ajax/jquery.validate/1.14.0/jquery.validate.min.js" type="text/javascript"></script>


@*<script>awem.isMobileOrTablet = function () { return 0; }; awem.fdw = 0; utils.init('m/d/yy', 0, '.')</script>*@

<script src="http://ajax.aspnetcdn.com/ajax/mvc/5.1/jquery.validate.unobtrusive.min.js" type="text/javascript"></script>
<script type="text/javascript" src="http://code.jquery.com/ui/1.11.3/jquery-ui.min.js"></script>
<script>

@*$(document).ready(function () {
        $('table tbody tr').dblclick(function (args) {
            debugger;
            var id = $(this).closest("tr").find('td:eq(0)').text().trim();

            url = '@Url.Action("Details", "C850_Header")' + '?id=' + id;
            window.open(
                url,
                '_blank' // <- This is what makes it open in a new window.
            );
        });

    });*@

    $(document).ready(function () {
        $("body").on("click", "#WebGrid td", function () {
            debugger;
            var id = $(this).closest("tr").find('td:eq(0)').text().trim();
            var customerId = $(this).closest("tr").find("td:first").html();
         var row_index = $(this).parent().index();
            if (id == "Line #" || id == "") {
                return false;
            }
            url = '/C850_Header/Details' + '?id=' + id;
            window.open(
                url,
                '_blank' // <- This is what makes it open in a new window.
            );
        });
    });

    //$("body").on("click", "#WebGrid td", function () {
    //    debugger;
    //    var customerId = $(this).closest("tr").find("td:first").html();
    //    window.location = "/Home/Details/" + customerId;
    //});
</script>

<h2>Grid crud Demo</h2>
@Html.InitCrudPopupsForGrid("DinnersGrid", "DinnersGridCrud")
@* popup names will be action + gridid; name is used when calling awe.open(name) *@
<style>
    .awe-groupbar {
        display: none;
    }

    .dis {
        display: none;
    }
</style>
@*<div class="bar">
        <button type="button" onclick="awe.open('createDinnersGrid')" class="awe-btn mbtn">Create</button>
    </div>*@

@*@(Html.Awe().Grid("DinnersGrid")
                                .Mod(o => o.PageInfo().ColumnsSelector().ColumnsAutohide())
                                .Url(Url.Action("GridGetItems", "DinnersGridCrud"))
                                .Resizable()
                                .Reorderable()
                                .Height(350)
                                .Columns(
                                    new Column { Name = "Id", Width = 55 },
                                    new Column { Name = "Name" }.Mod(o => o.Nohide()),
                                    new Column { Name = "Date" },
                                    new Column { Name = "Chef.FirstName,Chef.LastName", ClientFormat = ".ChefName", Header = "Chef" },
                                    new Column { ClientFormat = ".Meals", Header = "Meals" },
                                    new Column { ClientFormat = GridUtils.EditFormatForGrid("DinnersGrid"), Width = 50 }.Mod(o => o.Nohide()),
                                    new Column { ClientFormat = GridUtils.DeleteFormatForGrid("DinnersGrid"), Width = 50 }.Mod(o => o.Nohide())))
    <br />*@



@(Html.Awe().Grid("DinnersGrid")
                                                .Mod(o => o.PageInfo().ColumnsSelector().ColumnsAutohide())
                                                .Url(Url.Action("GridGetItems", "DinnersGridCrud"))
                                                .Resizable()
                                                .Reorderable()
                                                .Height(350)
                                                .PageSize(2)
                                                .HtmlAttributes(new { @id = "WebGrid", @class = "Grid" })
                                                .Columns(
                                                    new Column { Name = "HeaderKey", Header = "Line #" }.Mod(o => o.Nohide()),
                                                    new Column { Name = "Company" }.Mod(o => o.Nohide()),
                                                    new Column { Name = "TradingPartner", Header = "Trading Partner" }.Mod(o => o.Nohide()),
                                                    new Column { Name = "DocumentType", Header= "Document Type" }.Mod(o => o.Nohide()),
                                                    new Column { Name = "DocumentNumber", Header = "Doc Number" }.Mod(o => o.Nohide()),
                                                    new Column { Name = "AlternateDocument", Header = "Alt Document" },
                                                    new Column { Name = "StoreNumber", Header="Store Number" },
                                                    new Column { Name = "Amount" }.Mod(o => o.Nohide()),
                                                    new Column { Name = "DateRecieved", Header="Date Recieved" }.Mod(o => o.Nohide()),
                                                    new Column { Name = "DateAcknowledgement", Header = "Date Ack", }.Mod(o => o.Nohide())
                                                   ))

<br />



